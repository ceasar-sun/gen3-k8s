apiVersion: apps/v1
kind: Deployment
metadata:
  name: portal-deployment
spec:
  selector:
    matchLabels:
      app: portal
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: portal
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - portal
              topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: false
      volumes:
      - name: ca-volume
        secret:
          secretName: "portal-service-ca"
      - name: config-volume
        secret:
          secretName: "portal-config"
      - name: cert-volume
        secret:
          secretName: "portal-certs"
      - name: wait-script
        configMap:
          name: portal-wait
          defaultMode: 0744
      containers:
      - name: portal
        image: quay.io/cdis/data-portal:2021.03
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 30
          # portal sometimes takes a long time to come up ... -
          # has to fetch the dictionary, relay compile, etc
          failureThreshold: 6
        resources:
          requests:
            cpu: 0.6
            memory: 512Mi
          limits:
            # portal pigs out on resources at startup, then settles down
            cpu: 2
            memory: 4096Mi
        ports:
        - containerPort: 80
        - containerPort: 443
        command:
        - /bin/bash
        - /var/www/data-portal/waitForContainers.sh
        env:
          - name: HOSTNAME
            value: revproxy-service
          # disable npm 7's brand new update notifier to prevent Portal from stuck at starting up
          # see https://github.com/npm/cli/issues/3163
          - name: NPM_CONFIG_UPDATE_NOTIFIER
            value: "false"
          # - name: FENCE_URL
          #   value: http://fence-service/
          # - name: INDEXD_URL
          #   value: http://indexd-service/
          - name: APP
            value: gitops
          - name: GDC_SUBPATH
            value: http://revproxy-service/api/v0/submission/
          - name: NODE_ENV
            value: dev
          # - name: WORKSPACE_URL
          #   value: http://jupyter-service/
        volumeMounts:
        - name: "cert-volume"
          readOnly: true
          mountPath: "/mnt/ssl/service.crt"
          subPath: "service.crt"
        - name: "cert-volume"
          readOnly: true
          mountPath: "/mnt/ssl/service.key"
          subPath: "service.key"
        - name: "ca-volume"
          readOnly: true
          mountPath: "/usr/local/share/ca-certificates/cdis/cdis-ca.crt"
          subPath: "ca.pem"
        - name: "config-volume"
          mountPath: "/data-portal/data/config/gitops.json"
          subPath: "gitops.json"
        # - name: "config-volume"
        #   mountPath: "/data-portal/custom/logo/gitops-logo.png"
        #   subPath: "gitops-logo.png"
        # - name: "config-volume"
        #   mountPath: "/data-portal/custom/createdby/gitops.png"
        #   subPath: "gitops-createdby.png"
        # - name: "config-volume"
        #   mountPath: "/data-portal/custom/favicon/gitops-favicon.ico"
        #   subPath: "gitops-favicon.ico"
        # - name: "config-volume"
        #   mountPath: "/data-portal/custom/css/gitops.css"
        #   subPath: "gitops.css"
        # - name: "sponsor-img-volume"
        #   mountPath: "/data-portal/custom/sponsors/gitops-sponsors"
        - name: wait-script
          mountPath: /var/www/data-portal/waitForContainers.sh
          subPath: waitForContainers.sh