---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fence-deployment
spec:
  selector:
    matchLabels:
      app: fence
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: fence
    spec:
      serviceAccountName: fence-sa
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - fence
              topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: false
      volumes:
      - name: config-volume
        secret:
          secretName: fence-config
      - name: fence-jwt-keys
        secret:
          secretName: fence-jwt-keys
      - name: cert-volume
        secret:
          secretName: fence-certs
      - name: ca-volume
        secret:
          secretName: fence-service-ca
      - name: user-config
        configMap:
          name: fence-user
      - name: fence-setup
        configMap:
          name: fence-setup
      securityContext:
        # nginx group in current images
        fsGroup: 101
      containers:
      - name: fence
        image: quay.io/cdis/fence:2021.11
        env:
        - name: PYTHONPATH
          value: /var/www/fence
        - name: GEN3_DEBUG
          value: "true"
        livenessProbe:
          httpGet:
            path: /_status
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /_status
            port: 80
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 6567
        volumeMounts:
        - name: "config-volume"
          readOnly: true
          mountPath: /var/www/fence/fence-config.yaml 
          subPath: fence-config.yaml
        - name: "cert-volume"
          readOnly: true
          mountPath: "/mnt/ssl/service.crt"
          subPath: "service.crt"
        - name: "cert-volume"
          readOnly: true
          mountPath: "/mnt/ssl/service.key"
          subPath: "service.key"
        - name: "ca-volume"
          # See https://askubuntu.com/questions/645818/how-to-install-certificates-for-command-line
          readOnly: true
          mountPath: "/usr/local/share/ca-certificates/cdis/cdis-ca.crt"
          subPath: "ca.pem"
        - name: user-config
          mountPath: /var/www/fence/user.yaml
          subPath: user.yaml
        - name: fence-jwt-keys
          readOnly: true
          mountPath: /fence/keys/dev
        - name: fence-setup
          readOnly: true
          mountPath: /var/www/fence/fence_setup.sh
          subPath: fence_setup.sh
        resources:
            requests:
              cpu: 0.4
              memory: 1200Mi
            limits:
              cpu: 1.0
              memory: 2400Mi
        args:
        - /bin/bash
        - /var/www/fence/fence_setup.sh
